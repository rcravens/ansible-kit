---
- hosts: swarm_manager[0]
  become: true
  vars_files:
    - ../../settings.yml
  vars:
    - is_ecr_login_needed: false

  tasks:
    - name: Ensure stacks directory exists on manager node.
      file:
        path: "/home/{{ ansible_user }}/stacks"
        state: directory
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"

    - name: Find all the stack files (yml) in the localhost directory.
      ansible.builtin.find:
        paths: "stacks"
        patterns: "*.yml"
        recurse: no  # To find items in subdirectories as well
      register: stack_files
      delegate_to: localhost

    #    - debug: var=stack_files

    - name: Copying localhost stack files to the manager node.
      copy:
        src: "{{ item.path }}"
        dest: "/home/{{ ansible_user }}/stacks/{{ item.path | basename }}"
        owner: "{{ ansible_user }}"
        group: "{{ ansible_user }}"
        mode: u=rw,g=rw,o=r
        force: yes
      loop: "{{ stack_files.files }}"

    - name: Determine if we need ECR credentials
      set_fact:
        is_ecr_login_needed: true
      when: item.path == "stacks/app.yml" and (aws_account_id|d(false)) and aws_account_id is defined and (aws_account_id|length > 0)
      loop: "{{ stack_files.files }}"

    #    - debug: var=is_ecr_login_needed

    - name: Create Docker credentials for ECR access.
      shell: "aws ecr get-login-password --region {{ aws_region }} | docker login --username AWS --password-stdin {{ aws_account_id }}.dkr.ecr.us-east-1.amazonaws.com"
      when: is_ecr_login_needed

    - name: Deploy or redeploy the stacks to Docker Swarm.
      docker_stack:
        state: present
        name: "{{ app_name }}"
        with_registry_auth: "{{ item.path == 'stacks/app.yml' and (aws_account_id|d(false)) and aws_account_id is defined and (aws_account_id|length > 0) }}"
        compose:
          - "/home/{{ ansible_user }}/stacks/{{ item.path | basename }}"
      loop: "{{ stack_files.files }}"

