---
- hosts: swarm_manager
  become: true

  tasks:
    - name: Setting Up The Swarm (docker swarm init)
      block:
        - name: Initiating the swarm with default parameters
          community.docker.docker_swarm:
            state: present
            advertise_addr: "{{ansible_private_ip}}"
          register: init_swarm

        - name: "set fact: join token worker"
          set_fact:
            join_token_worker: "{{ init_swarm.swarm_facts.JoinTokens.Worker }}"

        - name: "set fact: join token manager"
          set_fact:
            join_token_manager: "{{ init_swarm.swarm_facts.JoinTokens.Manager }}"

      rescue:
        - name: Getting join manager token from existing Swarm
          command: docker swarm join-token manager -q
          register: join_token_manager_command

        - name: Getting join worker token from existing Swarm
          command: docker swarm join-token worker -q
          register: join_token_worker_command

        - name: "set fact: join_token_manager"
          set_fact:
            join_token_manager: "{{ join_token_manager_command['stdout'] }}"

        - name: "set fact: join_token_worker"
          set_fact:
            join_token_worker: "{{ join_token_worker_command['stdout'] }}"

- hosts: swarm_worker
  become: true

  tasks:
    - name: Create IP Dictionary to Look Up Private IP Given Public.
      set_fact:
        private_ip_lut: "{{ private_ip_lut | default({})  | combine({item: hostvars[item]['ansible_default_ipv4']['address']}) }}"
      with_items: "{{ groups.all }}"

#    - debug: var=private_ip_lut

    - name: Set Fact - First Swarm Manager Host
      set_fact:
        first_manager_public_ip: "{{ groups['swarm_manager'][0] }}"

    - name: Create List of All Manager Private IPs.
      set_fact:
        all_manager_private_ips: "{{ all_manager_private_ips | default([]) }} + [ '{{ hostvars[item]['ansible_default_ipv4']['address'] }}:2377' ]"
      with_items: "{{ groups.swarm_manager }}"

#    - debug: var=all_manager_private_ips

    - name: Joining worker to the swarm
      docker_swarm:
        state: join
        timeout: 60
        join_token: "{{ hostvars[first_manager_public_ip].join_token_worker }}"
        remote_addrs: [ "{{ private_ip_lut[first_manager_public_ip] }}:2377" ]

